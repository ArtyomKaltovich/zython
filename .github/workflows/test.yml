# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Unit tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ['3.6']
        minizinc_image:
          - {name: "latest", url: "https://github.com/MiniZinc/MiniZincIDE/releases/download/2.5.3/MiniZincIDE-2.5.3-x86_64.AppImage"},
          - {name: "2.5.0", url: "https://github.com/MiniZinc/MiniZincIDE/releases/download/2.5.0/MiniZincIDE-2.5.0-x86_64.AppImage"}

    env:
      MINIZINC_URL: ${{ matrix.minizinc_image.url }}
    steps:
    - uses: actions/checkout@v2
    - name: Add bin/ to PATH
      run: |
        mkdir -p ${{ github.workspace }}/bin
        echo "${{ github.workspace }}/bin" >> $GITHUB_PATH
    - name: Cache MiniZinc
      id: cache-minizinc
      uses: actions/cache@v2
      with:
        path: ${{ github.workspace }}/bin/minizinc
        key: ${{ env.MINIZINC_URL }}
    - name: Download MiniZinc
      if: steps.cache-minizinc.outputs.cache-hit != 'true'
      run: |
        sudo curl -o ${{ github.workspace }}/bin/minizinc -L $MINIZINC_URL
        sudo chmod +x ${{ github.workspace }}/bin/minizinc
        minizinc --version

    - name: Cache dev modules
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-doc-${{ hashFiles('**/requirements.txt', '**/requirements_doc.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-doc-

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        pip install flake8
    - name: Check minizinc version
      run: |
        minizinc --version
    - name: Lint with flake8
      run: |
        flake8 zython --count --max-complexity=10 --max-line-length=120 --statistics
    - name: Test with tox and pytest
      run: |
        tox
